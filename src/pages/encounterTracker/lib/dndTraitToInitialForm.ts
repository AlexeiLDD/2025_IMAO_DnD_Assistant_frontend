import { AbilityValueRu } from './abilityTypes';

/**
 * Приводит слово, связанное с характеристикой D&D, к начальной форме.
 * @param word Слово в любом падеже/форме (например, "Ловкости", "силу")
 * @returns Начальная форма слова с типом AbilityValueRu
 * @throws {Error} Если слово не соответствует ни одной характеристике
 */
export function dndTraitToInitialForm(word: string): AbilityValueRu {
  const traitsMap: Record<string, AbilityValueRu> = {
    // Сила
    силы: 'сила',
    силе: 'сила',
    силу: 'сила',
    силой: 'сила',
    сила: 'сила',

    // Ловкость
    ловкости: 'ловкость',
    ловкость: 'ловкость',
    ловкостью: 'ловкость',

    // Телосложение
    телосложения: 'телосложение',
    телосложению: 'телосложение',
    телосложением: 'телосложение',
    телосложенью: 'телосложение',
    телосложение: 'телосложение',

    // Интеллект
    интеллекта: 'интеллект',
    интеллекту: 'интеллект',
    интеллектом: 'интеллект',
    интеллект: 'интеллект',

    // Мудрость
    мудрости: 'мудрость',
    мудрость: 'мудрость',
    мудростью: 'мудрость',

    // Харизма
    харизмы: 'харизма',
    харизме: 'харизма',
    харизму: 'харизма',
    харизмой: 'харизма',
    харизма: 'харизма',
  };

  const lowerWord = word.toLowerCase();
  const initialForm = traitsMap[lowerWord];

  if (!initialForm) {
    throw new Error(`Слово "${word}" не соответствует характеристике D&D`);
  }

  return initialForm;
}
